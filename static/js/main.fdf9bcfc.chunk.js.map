{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setinput","inputRef","useRef","handler","e","concat","target","name","Clear","Remove","slice","evaluate","eval","toString","error","useEffect","current","focus","className","type","value","ref","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"szBAIA,SAASA,MAAO,IAAD,UACQC,oDAAS,IADjB,yKACRC,MADQ,cACFC,SADE,cAETC,SAAWC,kDAAO,MAKxB,SAASC,QAAQC,GACfJ,SAASD,MAAMM,OAAOD,EAAEE,OAAOC,OAG/B,SAASC,QACPR,SAAS,IAGb,SAASS,SACPT,SAASD,MAAMW,OAAO,IAEvB,SAASC,WACR,IACEX,SAASY,KAAKb,OAAOc,YACrB,MAAOC,OACPd,SAAS,UAMX,OAxBAe,sDAAU,kBAAMd,SAASe,QAAQC,WAyB/B,kEAAKC,UAAU,SAAf,SACA,mEAAKA,UAAU,WAAf,UACC,0FACC,4EACG,oEAAOC,KAAK,OAAOC,MAAOrB,MAAOsB,IAAKpB,aAEzC,mEAAKiB,UAAU,SAAf,UACC,qEAAQX,KAAK,QAAQe,QAASd,MAA9B,oBACA,qEAAQD,KAAK,YAAYe,QAASb,OAAlC,uBACA,qEAAQF,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eAEA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASnB,QAA1B,eACA,qEAAQI,KAAK,IAAIe,QAASX,SAA1B,uBAOQd,2B,iICpDA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrC,EAAA,EAAD,MAEFsC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fdf9bcfc.chunk.js","sourcesContent":["\nimport { useState,useEffect,useRef } from 'react';\nimport './App.css';\n\nfunction App() {\nconst [input,setinput]=useState(\"\")\nconst inputRef = useRef(null);\n\n  useEffect(() => inputRef.current.focus());\n\n\nfunction handler(e){\n  setinput(input.concat(e.target.name));\n   \n  }\n  function Clear(){\n    setinput(\"\")\n  }\n \nfunction Remove(){\n  setinput(input.slice(-1))\n}\n function evaluate() {\n  try {\n    setinput(eval(input).toString());\n  } catch (error) {\n    setinput(\"Error\");\n  }\n\n  }\n\n\n  return (\n    <div className=\"border\">\n    <div className=\"calc-app\">\n     <h1> Calculator</h1> \n      <form>\n         <input type=\"text\" value={input} ref={inputRef}  />\n      </form>\n      <div className=\"keypad\">\n       <button name=\"Clear\" onClick={Clear}>Clear </button>\n       <button name=\"Backspace\" onClick={Remove}>Backspace</button>\n       <button name=\"*\" onClick={handler}>*</button>\n       <button name=\"+\" onClick={handler}>+</button>\n       <button name=\"/\" onClick={handler}>/</button>\n       <button name=\"-\" onClick={handler}>-</button>\n       <button name=\"1\" onClick={handler}>1</button>\n       <button name=\"2\" onClick={handler}>2</button>\n       \n       <button name=\"3\" onClick={handler}>3</button>\n       <button name=\"4\" onClick={handler}>4</button>\n       <button name=\"5\" onClick={handler}>5</button>\n       <button name=\"6\" onClick={handler}>6</button>\n       <button name=\"7\" onClick={handler}>7</button>\n       <button name=\"8\" onClick={handler}>8</button>\n       <button name=\"9\" onClick={handler}>9</button>\n       <button name=\"0\" onClick={handler}>0</button>\n       <button name=\"=\" onClick={evaluate}>=</button>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}